{"version":3,"sources":["TipCalc.js","App.js","reportWebVitals.js","index.js"],"names":["Calc","props","state","bill","tipam","split","tamount","this","total","tip","totalper","className","toFixed","value","type","onChange","e","setState","parseFloat","target","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAsCeA,G,wDAlCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EACNC,MAAO,EACPC,MAAO,GALI,E,qDAQT,IAAD,OACCC,EAAUC,KAAKL,MAAMC,KAAOI,KAAKL,MAAME,MAAQ,IAC/CI,EAAQF,EAAUC,KAAKL,MAAMC,KAC7BM,EAAMH,EAAUC,KAAKL,MAAMG,MAC3BK,EAAWF,EAAQD,KAAKL,MAAMG,MACpC,OACI,sBAAKM,UAAU,YAAf,UACA,sBAAKA,UAAU,UAAf,UACI,+CAAkBL,EAAQM,QAAQ,MAClC,0CAAaJ,EAAMI,QAAQ,MAC3B,mDAAsBH,EAAIG,QAAQ,MAClC,qDAAwBF,EAASE,QAAQ,SAE7C,sBAAKD,UAAU,QAAf,UACA,sCACA,uBAAOE,MAAQN,KAAKL,MAAMC,KAAMW,KAAK,SAASC,SAAU,SAACC,GAAQ,EAAKC,SAAU,CAAEd,KAAMe,WAAWF,EAAEG,OAAON,YAC5G,qCACA,uBAAOA,MAAQN,KAAKL,MAAME,MAAOU,KAAK,SAASC,SAAU,SAACC,GAAQ,EAAKC,SAAU,CAAEb,MAAOc,WAAWF,EAAEG,OAAON,YAC9G,kDACA,uBAAOA,MAAQN,KAAKL,MAAMG,MAAOS,KAAK,SAASC,SAAU,SAACC,GAAQ,EAAKC,SAAU,CAAEZ,MAAOa,WAAWF,EAAEG,OAAON,sB,GA5BvGO,cCSJC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.398aed94.chunk.js","sourcesContent":["import react, { Component } from 'react'\nimport './TipCalc.css';\n\nclass Calc extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bill: 0,\n            tipam: 0,\n            split: 2\n        }\n    }\n    render() {\n        const tamount = this.state.bill * this.state.tipam / 100\n        const total = tamount + this.state.bill;\n        const tip = tamount / this.state.split;\n        const totalper = total / this.state.split;\n        return (\n            <div className=\"container\">\n            <div className=\"amounts\">\n                <h1>Tip amount: ${tamount.toFixed(2)}</h1>\n                <h1>Total: ${total.toFixed(2)}</h1>\n                <h1>Tip Per Person: ${tip.toFixed(2)}</h1>\n                <h1>Total Per Person: ${totalper.toFixed(2)}</h1>\n            </div>\n            <div className=\"input\">\n            <h2>Bill</h2>\n            <input value= {this.state.bill} type='number' onChange={(e) => { this.setState( { bill: parseFloat(e.target.value)})}}/>\n            <h2>Tip</h2>\n            <input value= {this.state.tipam} type='number' onChange={(e) => { this.setState( { tipam: parseFloat(e.target.value)})}}/>\n            <h2>How many people?</h2>\n            <input value= {this.state.split} type='number' onChange={(e) => { this.setState( { split: parseFloat(e.target.value)})}}/>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Calc","\nimport './App.css';\nimport Calc from './TipCalc'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}